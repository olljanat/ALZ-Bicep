name: "ALZ-Bicep unit tests"

trigger: none

variables:
  - group: csu-bicep-environment
  - name: ResourceGroupName
    value: "rsg-github-pr-test"
  - name: ManagementGroupPrefix
    value: "PR-test"
  - name: TopLevelManagementGroupDisplayName
    value: "PR test Azure Landing Zones"
  - name: SubscriptionName
    value: "Visual Studio Enterprise"
  - name: subid
    value: "ed7cb4e2-3819-437c-b99e-eaf8d73438e3"

jobs:
- job: bicep_deploy
  displayName: Deploy Bicep Files for PR
  pool: 
    vmImage: ubuntu-latest
  steps:
  - task: Bash@3
    displayName: Login to Azure
    name: git_azlogin
    inputs:
      targetType: 'inline'
      script: |
        az login --service-principal --username $(azclilogin) --password $(azclipwd) --tenant $(azclitenant)

  - task: Bash@3    
    displayName: Az CLI Create Resource Group for PR
    name: create_rsg
    inputs:
      targetType: 'inline'
      script: |
        az account set --subscription $(subscriptionId)
        if [ $(az group exists --name $(ResourceGroupName) ) == false ]; then
            sleep 300
        fi
        az group create --name $(ResourceGroupName) --location $(Location)

  - task: Bash@3     
    displayName: Az CLI After Deployment What-If Management Groups for PR
    name: whatif_mgs
    inputs:
      targetType: 'inline'
      script: |
        result=$(az deployment tenant what-if --template-file infra-as-code/bicep/modules/managementGroups/managementGroups.bicep --parameters @infra-as-code/bicep/modules/managementGroups/managementGroups.parameters.example.json parTopLevelManagementGroupPrefix=$(ManagementGroupPrefix) --location $(Location) --exclude-change-types Ignore NoChange --only-show-errors)
        if [[ $result != 'Resource changes: no change.' ]]
        then
          echo "##vso[task.logissue type=error]WhatIf reports difference between code and environment after deployment"
          echo "$result"
          exit 1
        fi

  - task: Bash@3     
    displayName: Az CLI Deploy Management Groups for PR
    name: create_mgs
    inputs:
      targetType: 'inline'
      script: |
        exit 1
        az deployment tenant create --template-file infra-as-code/bicep/modules/managementGroups/managementGroups.bicep --parameters @infra-as-code/bicep/modules/managementGroups/managementGroups.parameters.example.json parTopLevelManagementGroupPrefix=$(ManagementGroupPrefix) --location $(Location)



  - task: Bash@3  
    displayName: Az CLI Deploy Custom Role Definitions for PR
    name: create_rbac_roles
    inputs:
      targetType: 'inline'
      script: |
        az deployment mg create --template-file infra-as-code/bicep/modules/customRoleDefinitions/customRoleDefinitions.bicep  --parameters @infra-as-code/bicep/modules/customRoleDefinitions/customRoleDefinitions.parameters.example.json parAssignableScopeManagementGroupId=$(ManagementGroupPrefix) --location $(Location) --management-group-id $(ManagementGroupPrefix)
  
  - task: Bash@3    
    displayName: Az CLI Deploy Custom Policy Definitions for PR
    name: create_policy_defs
    inputs:
      targetType: 'inline'
      script: |
        az deployment mg create --template-file infra-as-code/bicep/modules/policy/definitions/custom-policy-definitions.bicep  --parameters @infra-as-code/bicep/modules/policy/definitions/custom-policy-definitions.parameters.example.json parTargetManagementGroupID=$(ManagementGroupPrefix) --location $(Location) --management-group-id $(ManagementGroupPrefix) 
  
  - task: Bash@3    
    displayName: Az CLI Deploy Logging for PR
    name: create_logging
    inputs:
      targetType: 'inline'
      script: |
        az deployment group create --resource-group $(ResourceGroupName) --template-file infra-as-code/bicep/modules/logging/logging.bicep --parameters @infra-as-code/bicep/modules/logging/logging.parameters.example.json

  - task: Bash@3    
    displayName: Az CLI Subscription Placement for PR
    name: move_sub
    inputs:
      targetType: 'inline'
      script: |
        az deployment mg create --template-file infra-as-code/bicep/modules/subscriptionPlacement/subscriptionPlacement.bicep --parameters @infra-as-code/bicep/modules/subscriptionPlacement/subscriptionPlacement.parameters.example.json parTargetManagementGroupId=$(ManagementGroupPrefix)-platform-connectivity parSubscriptionIds='["$(subscriptionId)"]' --location $(Location) --management-group-id $(ManagementGroupPrefix)

  - task: Bash@3    
    displayName: Az CLI Deploy Hub Networking for PR
    name: create_hub_network
    inputs:
      targetType: 'inline'
      script: |
        az deployment group create --resource-group $(ResourceGroupName) --template-file infra-as-code/bicep/modules/hubNetworking/hubNetworking.bicep --parameters @infra-as-code/bicep/modules/hubNetworking/hubNetworking.parameters.example.json

  - task: Bash@3    
    displayName: Az CLI Deploy vWan Networking for PR
    name: create_vwan_network
    inputs:
      targetType: 'inline'
      script: |
        az deployment group create --resource-group $(ResourceGroupName) --template-file infra-as-code/bicep/modules/vwanConnectivity/vwanConnectivity.bicep --parameters @infra-as-code/bicep/modules/vwanConnectivity/vwanConnectivity.parameters.example.json

  - task: Bash@3              
    displayName: Az CLI Deploy Spoke Networking for PR
    name: create_spoke_network
    inputs:
      targetType: 'inline'
      script: |
        az deployment group create --resource-group $(ResourceGroupName) --template-file infra-as-code/bicep/modules/spokeNetworking/spokeNetworking.bicep

  - task: Bash@3    
    displayName: Az CLI Deploy vWan Network connection for PR
    name: create_vwan_network_connection
    inputs:
      targetType: 'inline'
      script: |
        az deployment sub create --location $(Location) --template-file infra-as-code/bicep/modules/vnetPeeringVwan/vnetPeeringVwan.bicep --parameters @infra-as-code/bicep/modules/vnetPeeringVwan/vnetPeeringVwan.parameters.example.json parVirtualHubResourceId="/subscriptions/$(subscriptionId)/resourceGroups/$(ResourceGroupName)/providers/Microsoft.Network/virtualHubs/alz-vhub-$(Location)"  parRemoteVirtualNetworkResourceId="/subscriptions/$(subscriptionId)/resourceGroups/$(ResourceGroupName)/providers/Microsoft.Network/virtualNetworks/vnet-spoke"

  - task: Bash@3    
    displayName: Az CLI Deploy vNet Peer for PR spoke to hub
    name: create_vnet_peer_spoke_2_hub
    inputs:
      targetType: 'inline'
      script: |
        az deployment group create --resource-group $(ResourceGroupName) --template-file infra-as-code/bicep/modules/vnetPeering/vnetPeering.bicep --parameters @infra-as-code/bicep/modules/vnetPeering/vnetPeering.parameters.example.json parDestinationVirtualNetworkId="/subscriptions/$(subscriptionId)/resourceGroups/$(ResourceGroupName)/providers/Microsoft.Network/virtualNetworks/alz-hub-eastus"

  - task: Bash@3    
    displayName: Az CLI Deploy vNet Peer for PR hub to spoke
    name: create_vnet_peer_hub_2_spoke
    inputs:
      targetType: 'inline'
      script: |
        az deployment group create --resource-group $(ResourceGroupName) --template-file infra-as-code/bicep/modules/vnetPeering/vnetPeering.bicep --parameters @infra-as-code/bicep/modules/vnetPeering/vnetPeering.parameters.example.json parDestinationVirtualNetworkId="/subscriptions/$(subscriptionId)/resourceGroups/$(ResourceGroupName)/providers/Microsoft.Network/virtualNetworks/vnet-spoke" parSourceVirtualNetworkName="alz-hub-eastus" parDestinationVirtualNetworkName="vnet-spoke"
